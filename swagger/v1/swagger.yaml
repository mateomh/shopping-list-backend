---
openapi: 3.0.1
info:
  title: Shopping List API
  version: v1
paths: 
  /categories:
    get:
      summary: Returns the list of all the categories
      description: Endpoint to get all the available categories
      tags:
        - Categories
      responses:
        '200':
          description: An array of JSON objects with each category
          content:
            application/json:
              schema: 
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1234
                        name:
                          type: string
                          example: Sample Category
                        description:
                          type: string
                          example: This is a sample category
                        created_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                        updated_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'

    post:
      summary: Creates a category
      description: Endpoint to create a category
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample Category 2
                    description:
                      type: string
                      example: This is the second sample category
      responses:
        '201':
          description: A JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: created
                  category_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /categories/{category_id}:
    get:
      summary: Returns the information for a specific category
      description: Endpoint to get information on one category
      tags:
        - Categories
      parameters:
        - name: category_id
          in: path
          required: true
          description: A number indicating the ID of the category
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: An object with the information for the specified category
          content:
            application/json:
              schema: 
                type: object
                properties:
                  category:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1234
                      name:
                        type: string
                        example: Sample Category
                      description:
                        type: string
                        example: This is a sample category
                      created_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
                      updated_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API

    put:
      summary: Updates the information of an specific category
      description: Endpoint to update the information on one category
      tags:
        - Categories
      parameters:
        - name: category_id
          in: path
          required: true
          description: A number indicating the ID of the category
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    name:
                      required: false
                      type: string
                      example: Sample Category 2
                    description:
                      required: false
                      type: string
                      example: This is the second sample category
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: updated
                  category_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
    delete:
      summary: Deletes an specific category
      description: Endpoint to delete one category
      tags:
        - Categories
      parameters:
        - name: category_id
          in: path
          required: true
          description: A number indicating the ID of the category
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: deleted
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /prices/all:
    get:
      summary: Returns the list of all the prices
      description: Endpoint to get all the available prices
      tags:
        - Prices
      responses:
        '200':
          description: An array of JSON objects with each price
          content:
            application/json:
              schema: 
                type: object
                properties:
                  prices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1234
                        price:
                          type: number
                          format: float
                          example: 123.45
                        store_id:
                          type: integer
                          example: 1
                        product_id:
                          type: integer
                          example: 2
                        created_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                        updated_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'

  /prices/create:
    post:
      summary: Creates a price
      description: Endpoint to create a price
      tags:
        - Prices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: object
                  properties:
                    price:
                      type: number
                      format: float
                      example: 123.45
                    store_id:
                      type: integer
                      example: 1
                    product_id:
                      type: integer
                      example: 2
      responses:
        '201':
          description: A JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: created
                  price_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /prices/{price_id}:
    get:
      summary: Returns the information for a specific price
      description: Endpoint to get information on one price
      tags:
        - Prices
      parameters:
        - name: price_id
          in: path
          required: true
          description: A number indicating the ID of the price
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: An object with the information for the specified price
          content:
            application/json:
              schema: 
                type: object
                properties:
                  price:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1234
                      price:
                        type: number
                        format: float
                        example: 123.45
                      store_id:
                        type: integer
                        example: 1
                      product_id:
                        type: integer
                        example: 2
                      created_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
                      updated_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API

    put:
      summary: Updates the information of an specific price
      description: Endpoint to update the information on one price
      tags:
        - Prices
      parameters:
        - name: price_id
          in: path
          required: true
          description: A number indicating the ID of the price
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: object
                  properties:
                    price:
                      type: number
                      format: float
                      example: 123.45
                    store_id:
                      type: integer
                      example: 1
                    product_id:
                      type: integer
                      example: 2
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: updated
                  price_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
    delete:
      summary: Deletes an specific price
      description: Endpoint to delete one price
      tags:
        - Prices
      parameters:
        - name: price_id
          in: path
          required: true
          description: A number indicating the ID of the price
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: deleted
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /stores/all:
    get:
      summary: Returns the list of all the stores
      description: Endpoint to get all the available stores
      tags:
        - Stores
      responses:
        '200':
          description: An array of JSON objects with each store
          content:
            application/json:
              schema: 
                type: object
                properties:
                  stores:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1234
                        name:
                          type: string
                          example: Sample store
                        location:
                          type: string
                          example: Sample location of the store ST
                        logo_url:
                          type: string
                          example: http://yourlogohere.com
                        created_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                        updated_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'

  /stores/create:
    post:
      summary: Creates a store
      description: Endpoint to create a store
      tags:
        - Stores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample store
                    location:
                      type: string
                      example: Sample location of the store ST
                    logo_url:
                      type: string
                      example: http://yourlogohere.com
      responses:
        '201':
          description: A JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: created
                  store_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /stores/{store_id}:
    get:
      summary: Returns the information for a specific store
      description: Endpoint to get information on one store
      tags:
        - Stores
      parameters:
        - name: store_id
          in: path
          required: true
          description: A number indicating the ID of the store
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: An object with the information for the specified store
          content:
            application/json:
              schema: 
                type: object
                properties:
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1234
                      name:
                        type: string
                        example: Sample store
                      location:
                        type: string
                        example: Sample location of the store ST
                      logo_url:
                        type: string
                        example: http://yourlogohere.com
                      created_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
                      updated_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API

    put:
      summary: Updates the information of an specific store
      description: Endpoint to update the information on one store
      tags:
        - Stores
      parameters:
        - name: store_id
          in: path
          required: true
          description: A number indicating the ID of the store
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample store
                    location:
                      type: string
                      example: Sample location of the store ST
                    logo_url:
                      type: string
                      example: http://yourlogohere.com
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: updated
                  store_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
    delete:
      summary: Deletes an specific store
      description: Endpoint to delete one store
      tags:
        - Stores
      parameters:
        - name: store_id
          in: path
          required: true
          description: A number indicating the ID of the store
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: deleted
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /products/all:
    get:
      summary: Returns the list of all the products
      description: Endpoint to get all the available products
      tags:
        - Products
      responses:
        '200':
          description: An array of JSON objects with each product
          content:
            application/json:
              schema: 
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1234
                        name:
                          type: string
                          example: Sample product
                        quantity:
                          type: string
                          example: 100 lt
                        description:
                          type: string
                          example: This is a sample product
                        image_url:
                          type: string
                          example: http://yourproductimagehere.com
                        category_id:
                          type: integer
                          example: 1234
                        created_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                        updated_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'

  /products/create:
    post:
      summary: Creates a product
      description: Endpoint to create a product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample product
                    quantity:
                      type: string
                      example: 100 lt
                    description:
                      type: string
                      example: This is a sample product
                    image_url:
                      type: string
                      example: http://yourproductimagehere.com
                    category_id:
                      type: integer
                      example: 1234
      responses:
        '201':
          description: A JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: created
                  product_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /products/{product_id}:
    get:
      summary: Returns the information for a specific product
      description: Endpoint to get information on one product
      tags:
        - Products
      parameters:
        - name: product_id
          in: path
          required: true
          description: A number indicating the ID of the product
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: An object with the information for the specified product
          content:
            application/json:
              schema: 
                type: object
                properties:
                  product:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1234
                      name:
                        type: string
                        example: Sample product
                      quantity:
                        type: string
                        example: 100 lt
                      description:
                        type: string
                        example: This is a sample product
                      image_url:
                        type: string
                        example: http://yourproductimagehere.com
                      category_id:
                        type: integer
                        example: 1234
                      created_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
                      updated_at:
                        type: string
                        format: datetime
                        example: '2022-10-21T01:52:44.530Z'
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API

    put:
      summary: Updates the information of an specific product
      description: Endpoint to update the information on one product
      tags:
        - Products
      parameters:
        - name: product_id
          in: path
          required: true
          description: A number indicating the ID of the product
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Sample product
                    quantity:
                      type: string
                      example: 100 lt
                    description:
                      type: string
                      example: This is a sample product
                    image_url:
                      type: string
                      example: http://yourproductimagehere.com
                    category_id:
                      type: integer
                      example: 1234
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: updated
                  product_id:
                    type: int
                    format: int32
                    example: 1234
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
    delete:
      summary: Deletes an specific product
      description: Endpoint to delete one product
      tags:
        - Products
      parameters:
        - name: product_id
          in: path
          required: true
          description: A number indicating the ID of the product
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: An JSON object with the status
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    example: deleted
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
  /calculate/get_stores:
    post:
      summary: Gets the list of products differentiated by store
      description: Endpoint to get the products grouped by store where they have the lowest price
      tags:
        - Calculate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_ids:
                  type: array
                  example: [1,2,5,7]
      responses:
        '200':
          description: An JSON object with the store information and the products discriminated by store ID
          content:
            application/json:
              schema: 
                type: object
                properties:
                  stores:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1234
                        name:
                          type: string
                          example: Sample store
                        location:
                          type: string
                          example: Sample location of the store ST
                        logo_url:
                          type: string
                          example: http://yourlogohere.com
                        created_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                        updated_at:
                          type: string
                          format: datetime
                          example: '2022-10-21T01:52:44.530Z'
                  result:
                    type: object
                    properties:
                      store_id:
                        type: array
                        example: [1,2,3,4]
                      store_id2:
                        type: array
                        example: [5,7]
        '400':
          description: Returns the api error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: This is the error generated in the API
  
servers:
- url: http://localhost:3929
  variables:
    defaultHost:
      default: www.example.com
